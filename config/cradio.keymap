/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 drew@abstracterror.com
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// layers
#define DEF 0
#define NUM 1
#define SYM 2
#define TOP 3
#define NAV 4
#define BLT 5

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE>;
};

/ {
    macros {
        lpar: lpar {
            label = "lpar";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <16>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N9>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <60>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <60>;
            key-positions = <13 23>;
            bindings = <&kp TAB>;
        };

        combo_left_bracket {
            timeout-ms = <60>;
            key-positions = <1 11>;
            bindings = <&kp LEFT_BRACKET>;
        };

        combo_left_brace {
            timeout-ms = <60>;
            key-positions = <2 12>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_left_paren {
            timeout-ms = <60>;
            key-positions = <3 13>;
            bindings = <&lpar>;
        };

        combo_right_paren {
            timeout-ms = <60>;
            key-positions = <6 16>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };

        combo_right_brace {
            timeout-ms = <60>;
            key-positions = <7 17>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_right_bracket {
            timeout-ms = <60>;
            key-positions = <8 18>;
            bindings = <&kp RIGHT_BRACKET>;
        };
    };

    behaviors {
        shift_cw: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp B                   &kp J       &kp L       &kp U       &kp Y       &kp BKSP
                &mt LCTL A  &mt LALT R  &mt LGUI S  &mt LSFT T  &kp G                   &kp M       &mt RSFT N  &mt RGUI E  &mt RALT I  &mt RCTL O
                &lt BLT Z   &kp X       &kp C       &kp D       &kp V                   &kp K       &kp H       &kp CMMA    &kp DOT     &kp FSLH
                                                    &mo NUM     &shift_cw               &lt NAV SPC &mo SYM
            >;
        };

        number_layer {
            bindings = <
                &none       &none       &none       &none       &none                   &none       &kp NUM_4   &kp NUM_5   &kp NUM_6   &kp SCLN
                &kp LCTL    &kp LALT    &kp LGUI    &kp LSFT    &none                   &none       &kp NUM_1   &kp NUM_2   &kp NUM_3   &kp BSLH
                &none       &none       &none       &none       &none                   &none       &kp NUM_7   &kp NUM_8   &kp NUM_9   &kp PIPE
                                                    &mo NUM     &trans                  &lt NAV NUM_0  &mo TOP
            >;
        };

        symbols_layer {
            bindings = <
                &kp COLN    &kp PLUS    &kp UNDER   &kp DQT     &none                   &none       &none       &none       &none       &none
                &none       &kp EQUAL   &kp MINUS   &kp SQT     &none                   &none       &kp RSFT    &kp RGUI    &kp RALT    &kp RCTL
                &none       &none       &none       &none       &none                   &none       &none       &none       &none       &none
                                                    &mo TOP     &trans                  &trans      &mo SYM
            >;
        };

        top_layer {
            bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT               &kp CARET   &kp AMPS    &kp STAR    &kp GRAVE   &kp TILDE
                &kp LCTL    &kp LALT    &kp LGUI    &kp LSFT    &none                   &none       &kp RSFT    &kp RGUI    &kp RALT    &kp RCTL
                &bootloader &none       &none       &none       &none                   &none       &none       &none       &none       &bootloader
                                                    &trans      &trans                  &trans      &trans
            >;
        };

        nav_layer {
            bindings = <
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                  &kp F6      &kp F7      &kp F8      &kp F9      &kp DEL
                &kp LCTL    &kp LALT    &kp LGUI    &kp LSFT    &kp ESC                 &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp ENTER
                &kp F10     &kp F11     &kp F12     &none       &none                   &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &kp INS
                                                    &trans      &kp TAB                 &trans      &trans
            >;
        };

        bluetooth_layer {
            bindings = <
                &none       &none         &none         &none         &none             &none       &none       &none       &none       &bt BT_CLR
                &none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none             &none       &none       &none       &none       &none
                &trans      &none         &none         &none         &none             &none       &none       &none       &none       &none
                                                        &none         &none             &none       &none
            >;
        };
    };
};
